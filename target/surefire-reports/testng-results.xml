<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="6" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-02-25T09:25:47 CST" name="Suite B" finished-at="2021-02-25T09:26:00 CST" duration-ms="12238">
    <groups>
    </groups>
    <test started-at="2021-02-25T09:25:47 CST" name="Test B" finished-at="2021-02-25T09:25:54 CST" duration-ms="6120">
      <class name="suiteb.TestB">
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteb.TestB@4f67eb2a]" started-at="2021-02-25T09:25:47 CST" name="init" finished-at="2021-02-25T09:25:47 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6e46d9f4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestB.testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@4f67eb2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@4f67eb2a]" started-at="2021-02-25T09:25:47 CST" name="testB" data-provider="dataSuiteB" finished-at="2021-02-25T09:25:50 CST" duration-ms="3010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteb.TestB@4f67eb2a]" started-at="2021-02-25T09:25:50 CST" name="quit" finished-at="2021-02-25T09:25:50 CST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteb.TestB@4f67eb2a]" started-at="2021-02-25T09:25:50 CST" name="init" finished-at="2021-02-25T09:25:50 CST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6e46d9f4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestB.testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@4f67eb2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@4f67eb2a]" started-at="2021-02-25T09:25:50 CST" name="testB" data-provider="dataSuiteB" finished-at="2021-02-25T09:25:53 CST" duration-ms="3009" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteb.TestB@4f67eb2a]" started-at="2021-02-25T09:25:54 CST" name="quit" finished-at="2021-02-25T09:25:54 CST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suiteb.TestB -->
    </test> <!-- Test B -->
    <test started-at="2021-02-25T09:25:54 CST" name="Test BB" finished-at="2021-02-25T09:26:00 CST" duration-ms="6104">
      <class name="suiteb.TestBB">
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteb.TestBB@f381794]" started-at="2021-02-25T09:25:54 CST" name="init" finished-at="2021-02-25T09:25:54 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@21c64522]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestBB.testBB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestBB@f381794] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testBB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestBB@f381794]" started-at="2021-02-25T09:25:54 CST" name="testBB" data-provider="dataSuiteB" finished-at="2021-02-25T09:25:57 CST" duration-ms="3005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1BB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1BB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBB -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteb.TestBB@f381794]" started-at="2021-02-25T09:25:57 CST" name="quit" finished-at="2021-02-25T09:25:57 CST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteb.TestBB@f381794]" started-at="2021-02-25T09:25:57 CST" name="init" finished-at="2021-02-25T09:25:57 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@21c64522]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestBB.testBB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestBB@f381794] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testBB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestBB@f381794]" started-at="2021-02-25T09:25:57 CST" name="testBB" data-provider="dataSuiteB" finished-at="2021-02-25T09:26:00 CST" duration-ms="3008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2BB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2BB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBB -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suiteb.TestBB@f381794]" started-at="2021-02-25T09:26:00 CST" name="quit" finished-at="2021-02-25T09:26:00 CST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suiteb.TestBB -->
    </test> <!-- Test BB -->
  </suite> <!-- Suite B -->
  <suite started-at="2021-02-25T09:26:00 CST" name="Suite C" finished-at="2021-02-25T09:26:06 CST" duration-ms="6245">
    <groups>
    </groups>
    <test started-at="2021-02-25T09:26:00 CST" name="Test C" finished-at="2021-02-25T09:26:00 CST" duration-ms="71">
      <class name="suitec.TestC">
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitec.TestC@44a7bfbc]" started-at="2021-02-25T09:26:00 CST" name="init" finished-at="2021-02-25T09:26:00 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@460f76a6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestC.testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@44a7bfbc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@44a7bfbc]" started-at="2021-02-25T09:26:00 CST" name="testC" data-provider="dataSuiteC" finished-at="2021-02-25T09:26:00 CST" duration-ms="6" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1C]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
a is not equals to b]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
a is not equals to b
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.failAndStop(TestBase.java:51)
at suitec.TestC.testC(TestC.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suitec.TestC@44a7bfbc]" started-at="2021-02-25T09:26:00 CST" name="quit" finished-at="2021-02-25T09:26:00 CST" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitec.TestC@44a7bfbc]" started-at="2021-02-25T09:26:00 CST" name="init" finished-at="2021-02-25T09:26:00 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@460f76a6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestC.testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@44a7bfbc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@44a7bfbc]" started-at="2021-02-25T09:26:00 CST" name="testC" data-provider="dataSuiteC" finished-at="2021-02-25T09:26:00 CST" duration-ms="3" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2C]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
a is not equals to b]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
a is not equals to b
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.failAndStop(TestBase.java:51)
at suitec.TestC.testC(TestC.java:14)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suitec.TestC@44a7bfbc]" started-at="2021-02-25T09:26:00 CST" name="quit" finished-at="2021-02-25T09:26:00 CST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suitec.TestC -->
    </test> <!-- Test C -->
    <test started-at="2021-02-25T09:26:00 CST" name="Test CC" finished-at="2021-02-25T09:26:06 CST" duration-ms="6126">
      <class name="suitec.TestCC">
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitec.TestCC@5939a379]" started-at="2021-02-25T09:26:00 CST" name="init" finished-at="2021-02-25T09:26:00 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@76a82f33]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestCC.testCC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestCC@5939a379] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testCC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestCC@5939a379]" started-at="2021-02-25T09:26:00 CST" name="testCC" data-provider="dataSuiteC" finished-at="2021-02-25T09:26:03 CST" duration-ms="3013" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1CC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1CC]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Text doesn't match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Text doesn't match
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at suitec.TestCC.testCC(TestCC.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCC -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suitec.TestCC@5939a379]" started-at="2021-02-25T09:26:03 CST" name="quit" finished-at="2021-02-25T09:26:03 CST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitec.TestCC@5939a379]" started-at="2021-02-25T09:26:03 CST" name="init" finished-at="2021-02-25T09:26:03 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@76a82f33]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestCC.testCC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestCC@5939a379] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testCC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestCC@5939a379]" started-at="2021-02-25T09:26:03 CST" name="testCC" data-provider="dataSuiteC" finished-at="2021-02-25T09:26:06 CST" duration-ms="3003" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2CC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2CC]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Text doesn't match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Text doesn't match
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at suitec.TestCC.testCC(TestCC.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCC -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suitec.TestCC@5939a379]" started-at="2021-02-25T09:26:06 CST" name="quit" finished-at="2021-02-25T09:26:06 CST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suitec.TestCC -->
    </test> <!-- Test CC -->
  </suite> <!-- Suite C -->
  <suite started-at="2021-02-25T09:26:06 CST" name="My Test Suite" finished-at="2021-02-25T09:26:06 CST" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- My Test Suite -->
  <suite started-at="2021-02-25T09:25:34 CST" name="Suite A" finished-at="2021-02-25T09:25:47 CST" duration-ms="13072">
    <groups>
    </groups>
    <test started-at="2021-02-25T09:25:34 CST" name="Test A" finished-at="2021-02-25T09:25:41 CST" duration-ms="6879">
      <class name="suitea.TestA">
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitea.TestA@2b4bac49]" started-at="2021-02-25T09:25:34 CST" name="init" finished-at="2021-02-25T09:25:35 CST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@644c78d4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@2b4bac49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@2b4bac49]" started-at="2021-02-25T09:25:35 CST" name="testA" data-provider="dataSuiteA" finished-at="2021-02-25T09:25:38 CST" duration-ms="3015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suitea.TestA@2b4bac49]" started-at="2021-02-25T09:25:38 CST" name="quit" finished-at="2021-02-25T09:25:38 CST" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitea.TestA@2b4bac49]" started-at="2021-02-25T09:25:38 CST" name="init" finished-at="2021-02-25T09:25:38 CST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@644c78d4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@2b4bac49] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@2b4bac49]" started-at="2021-02-25T09:25:38 CST" name="testA" data-provider="dataSuiteA" finished-at="2021-02-25T09:25:41 CST" duration-ms="3013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suitea.TestA@2b4bac49]" started-at="2021-02-25T09:25:41 CST" name="quit" finished-at="2021-02-25T09:25:41 CST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suitea.TestA -->
    </test> <!-- Test A -->
    <test started-at="2021-02-25T09:25:41 CST" name="Test AA" finished-at="2021-02-25T09:25:47 CST" duration-ms="6143">
      <class name="suitea.TestAA">
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitea.TestAA@1356d4d4]" started-at="2021-02-25T09:25:41 CST" name="init" finished-at="2021-02-25T09:25:41 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7bb3a9fe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestAA@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testAA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestAA@1356d4d4]" started-at="2021-02-25T09:25:41 CST" name="testAA" data-provider="dataSuiteA" finished-at="2021-02-25T09:25:44 CST" duration-ms="3014" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1AA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1AA]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Text doesn't match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Text doesn't match
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at suitea.TestAA.testAA(TestAA.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suitea.TestAA@1356d4d4]" started-at="2021-02-25T09:25:44 CST" name="quit" finished-at="2021-02-25T09:25:44 CST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitea.TestAA@1356d4d4]" started-at="2021-02-25T09:25:44 CST" name="init" finished-at="2021-02-25T09:25:44 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7bb3a9fe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestAA@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="testAA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestAA@1356d4d4]" started-at="2021-02-25T09:25:44 CST" name="testAA" data-provider="dataSuiteA" finished-at="2021-02-25T09:25:47 CST" duration-ms="3010" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2AA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p2AA]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Text doesn't match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Text doesn't match
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at suitea.TestAA.testAA(TestAA.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method is-config="true" signature="quit()[pri:0, instance:suitea.TestAA@1356d4d4]" started-at="2021-02-25T09:25:47 CST" name="quit" finished-at="2021-02-25T09:25:47 CST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suitea.TestAA -->
    </test> <!-- Test AA -->
  </suite> <!-- Suite A -->
</testng-results>
