<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="12" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite B" duration-ms="12322" started-at="2021-03-05T11:08:33 CST" finished-at="2021-03-05T11:08:45 CST">
    <groups>
      <group name="sanity">
        <method signature="TestB.testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@6e6c3152]" name="testB" class="suiteb.TestB"/>
      </group> <!-- sanity -->
      <group name="Browser">
        <method signature="TestB.testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@6e6c3152]" name="testB" class="suiteb.TestB"/>
      </group> <!-- Browser -->
    </groups>
    <test name="Test B" duration-ms="6118" started-at="2021-03-05T11:08:33 CST" finished-at="2021-03-05T11:08:39 CST">
      <class name="suiteb.TestB">
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteb.TestB@6e6c3152]" name="init" is-config="true" duration-ms="1" started-at="2021-03-05T11:08:33 CST" finished-at="2021-03-05T11:08:33 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@60099951]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestB.testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@6e6c3152] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@6e6c3152]" name="testB" duration-ms="3007" started-at="2021-03-05T11:08:33 CST" data-provider="dataSuiteB" finished-at="2021-03-05T11:08:36 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suiteb.TestB@6e6c3152]" name="quit" is-config="true" duration-ms="47" started-at="2021-03-05T11:08:36 CST" finished-at="2021-03-05T11:08:36 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteb.TestB@6e6c3152]" name="init" is-config="true" duration-ms="1" started-at="2021-03-05T11:08:36 CST" finished-at="2021-03-05T11:08:36 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@60099951]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestB.testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@6e6c3152] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestB@6e6c3152]" name="testB" duration-ms="3013" started-at="2021-03-05T11:08:36 CST" data-provider="dataSuiteB" finished-at="2021-03-05T11:08:39 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suiteb.TestB@6e6c3152]" name="quit" is-config="true" duration-ms="42" started-at="2021-03-05T11:08:39 CST" finished-at="2021-03-05T11:08:39 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suiteb.TestB -->
    </test> <!-- Test B -->
    <test name="Test BB" duration-ms="6184" started-at="2021-03-05T11:08:39 CST" finished-at="2021-03-05T11:08:45 CST">
      <class name="suiteb.TestBB">
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteb.TestBB@4973813a]" name="init" is-config="true" duration-ms="6" started-at="2021-03-05T11:08:39 CST" finished-at="2021-03-05T11:08:39 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@368247b9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestBB.testBB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestBB@4973813a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testBB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestBB@4973813a]" name="testBB" duration-ms="3012" started-at="2021-03-05T11:08:39 CST" data-provider="dataSuiteB" finished-at="2021-03-05T11:08:42 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1BB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1BB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBB -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suiteb.TestBB@4973813a]" name="quit" is-config="true" duration-ms="67" started-at="2021-03-05T11:08:42 CST" finished-at="2021-03-05T11:08:42 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suiteb.TestBB@4973813a]" name="init" is-config="true" duration-ms="4" started-at="2021-03-05T11:08:42 CST" finished-at="2021-03-05T11:08:42 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@368247b9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestBB.testBB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestBB@4973813a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testBB(java.lang.String, java.lang.String)[pri:0, instance:suiteb.TestBB@4973813a]" name="testBB" duration-ms="3012" started-at="2021-03-05T11:08:42 CST" data-provider="dataSuiteB" finished-at="2021-03-05T11:08:45 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2BB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2BB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBB -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suiteb.TestBB@4973813a]" name="quit" is-config="true" duration-ms="76" started-at="2021-03-05T11:08:45 CST" finished-at="2021-03-05T11:08:45 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suiteb.TestBB -->
    </test> <!-- Test BB -->
  </suite> <!-- Suite B -->
  <suite name="Suite C" duration-ms="6285" started-at="2021-03-05T11:08:45 CST" finished-at="2021-03-05T11:08:52 CST">
    <groups>
      <group name="sanity">
        <method signature="TestC.testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@63e2203c]" name="testC" class="suitec.TestC"/>
      </group> <!-- sanity -->
      <group name="Browser">
        <method signature="TestC.testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@63e2203c]" name="testC" class="suitec.TestC"/>
      </group> <!-- Browser -->
    </groups>
    <test name="Test C" duration-ms="81" started-at="2021-03-05T11:08:45 CST" finished-at="2021-03-05T11:08:45 CST">
      <class name="suitec.TestC">
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitec.TestC@63e2203c]" name="init" is-config="true" duration-ms="1" started-at="2021-03-05T11:08:45 CST" finished-at="2021-03-05T11:08:45 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@55a147cc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestC.testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@63e2203c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@63e2203c]" name="testC" duration-ms="2" started-at="2021-03-05T11:08:45 CST" data-provider="dataSuiteC" finished-at="2021-03-05T11:08:45 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1C]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
a is not equals to b]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
a is not equals to b
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.failAndStop(TestBase.java:82)
at suitec.TestC.testC(TestC.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suitec.TestC@63e2203c]" name="quit" is-config="true" duration-ms="24" started-at="2021-03-05T11:08:45 CST" finished-at="2021-03-05T11:08:45 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitec.TestC@63e2203c]" name="init" is-config="true" duration-ms="1" started-at="2021-03-05T11:08:45 CST" finished-at="2021-03-05T11:08:45 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@55a147cc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestC.testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@63e2203c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestC@63e2203c]" name="testC" duration-ms="1" started-at="2021-03-05T11:08:45 CST" data-provider="dataSuiteC" finished-at="2021-03-05T11:08:45 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2C]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
a is not equals to b]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
a is not equals to b
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testBase.TestBase.failAndStop(TestBase.java:82)
at suitec.TestC.testC(TestC.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suitec.TestC@63e2203c]" name="quit" is-config="true" duration-ms="43" started-at="2021-03-05T11:08:45 CST" finished-at="2021-03-05T11:08:45 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suitec.TestC -->
    </test> <!-- Test C -->
    <test name="Test CC" duration-ms="6142" started-at="2021-03-05T11:08:45 CST" finished-at="2021-03-05T11:08:52 CST">
      <class name="suitec.TestCC">
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitec.TestCC@4bbfb90a]" name="init" is-config="true" duration-ms="2" started-at="2021-03-05T11:08:45 CST" finished-at="2021-03-05T11:08:45 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3c77d488]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestCC.testCC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestCC@4bbfb90a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testCC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestCC@4bbfb90a]" name="testCC" duration-ms="3013" started-at="2021-03-05T11:08:45 CST" data-provider="dataSuiteC" finished-at="2021-03-05T11:08:48 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1CC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1CC]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Text doesn't match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Text doesn't match
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at suitec.TestCC.testCC(TestCC.java:16)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCC -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suitec.TestCC@4bbfb90a]" name="quit" is-config="true" duration-ms="62" started-at="2021-03-05T11:08:48 CST" finished-at="2021-03-05T11:08:49 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitec.TestCC@4bbfb90a]" name="init" is-config="true" duration-ms="2" started-at="2021-03-05T11:08:49 CST" finished-at="2021-03-05T11:08:49 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3c77d488]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestCC.testCC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestCC@4bbfb90a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testCC(java.lang.String, java.lang.String)[pri:0, instance:suitec.TestCC@4bbfb90a]" name="testCC" duration-ms="3015" started-at="2021-03-05T11:08:49 CST" data-provider="dataSuiteC" finished-at="2021-03-05T11:08:52 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2CC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2CC]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Text doesn't match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Text doesn't match
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at suitec.TestCC.testCC(TestCC.java:16)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCC -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suitec.TestCC@4bbfb90a]" name="quit" is-config="true" duration-ms="39" started-at="2021-03-05T11:08:52 CST" finished-at="2021-03-05T11:08:52 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suitec.TestCC -->
    </test> <!-- Test CC -->
  </suite> <!-- Suite C -->
  <suite name="My Test Suite" duration-ms="0" started-at="2021-03-05T11:08:52 CST" finished-at="2021-03-05T11:08:52 CST">
    <groups>
    </groups>
  </suite> <!-- My Test Suite -->
  <suite name="Suite A" duration-ms="13094" started-at="2021-03-05T11:08:20 CST" finished-at="2021-03-05T11:08:33 CST">
    <groups>
      <group name="sanity">
        <method signature="TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@335eadca]" name="testA" class="suitea.TestA"/>
      </group> <!-- sanity -->
      <group name="Browser">
        <method signature="TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@335eadca]" name="testA" class="suitea.TestA"/>
      </group> <!-- Browser -->
    </groups>
    <test name="Test A" duration-ms="6906" started-at="2021-03-05T11:08:20 CST" finished-at="2021-03-05T11:08:27 CST">
      <class name="suitea.TestA">
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitea.TestA@335eadca]" name="init" is-config="true" duration-ms="209" started-at="2021-03-05T11:08:20 CST" finished-at="2021-03-05T11:08:20 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@d86a6f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@335eadca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@335eadca]" name="testA" duration-ms="3010" started-at="2021-03-05T11:08:20 CST" data-provider="dataSuiteA" finished-at="2021-03-05T11:08:23 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suitea.TestA@335eadca]" name="quit" is-config="true" duration-ms="547" started-at="2021-03-05T11:08:23 CST" finished-at="2021-03-05T11:08:24 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitea.TestA@335eadca]" name="init" is-config="true" duration-ms="1" started-at="2021-03-05T11:08:24 CST" finished-at="2021-03-05T11:08:24 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@d86a6f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestA.testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@335eadca] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="testA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestA@335eadca]" name="testA" duration-ms="3014" started-at="2021-03-05T11:08:24 CST" data-provider="dataSuiteA" finished-at="2021-03-05T11:08:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suitea.TestA@335eadca]" name="quit" is-config="true" duration-ms="35" started-at="2021-03-05T11:08:27 CST" finished-at="2021-03-05T11:08:27 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suitea.TestA -->
    </test> <!-- Test A -->
    <test name="Test AA" duration-ms="6151" started-at="2021-03-05T11:08:27 CST" finished-at="2021-03-05T11:08:33 CST">
      <class name="suitea.TestAA">
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitea.TestAA@2758fe70]" name="init" is-config="true" duration-ms="1" started-at="2021-03-05T11:08:27 CST" finished-at="2021-03-05T11:08:27 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3646a422]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestAA@2758fe70] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testAA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestAA@2758fe70]" name="testAA" duration-ms="3015" started-at="2021-03-05T11:08:27 CST" data-provider="dataSuiteA" finished-at="2021-03-05T11:08:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1AA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1AA]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Text doesn't match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Text doesn't match
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at suitea.TestAA.testAA(TestAA.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suitea.TestAA@2758fe70]" name="quit" is-config="true" duration-ms="45" started-at="2021-03-05T11:08:30 CST" finished-at="2021-03-05T11:08:30 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="init(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:suitea.TestAA@2758fe70]" name="init" is-config="true" duration-ms="1" started-at="2021-03-05T11:08:30 CST" finished-at="2021-03-05T11:08:30 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3646a422]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=TestAA.testAA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestAA@2758fe70] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="testAA(java.lang.String, java.lang.String)[pri:0, instance:suitea.TestAA@2758fe70]" name="testAA" duration-ms="3011" started-at="2021-03-05T11:08:30 CST" data-provider="dataSuiteA" finished-at="2021-03-05T11:08:33 CST">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2AA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p2AA]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Text doesn't match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Text doesn't match
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at suitea.TestAA.testAA(TestAA.java:21)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1175)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAA -->
        <test-method status="PASS" signature="quit()[pri:0, instance:suitea.TestAA@2758fe70]" name="quit" is-config="true" duration-ms="39" started-at="2021-03-05T11:08:33 CST" finished-at="2021-03-05T11:08:33 CST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- suitea.TestAA -->
    </test> <!-- Test AA -->
  </suite> <!-- Suite A -->
</testng-results>
